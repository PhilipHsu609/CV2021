#ifndef MASK_H
#define MASK_H

#include <cmath>
#include <vector>

template <class T>
using Mask = std::vector<std::vector<T>>;

namespace Detector {
    const std::vector<Mask<int>> Robert{
        {{-1, 0},
         {0, 1}},

        {{0, -1},
         {1, 0}}};

    const std::vector<Mask<int>> Prewitt{
        {{-1, -1, -1},
         {0, 0, 0},
         {1, 1, 1}},

        {{-1, 0, 1},
         {-1, 0, 1},
         {-1, 0, 1}}};

    const std::vector<Mask<int>> Sobel{
        {{-1, -2, -1},
         {0, 0, 0},
         {1, 2, 1}},

        {{-1, 0, 1},
         {-2, 0, 2},
         {-1, 0, 1}}};

    const std::vector<Mask<double>> FreiAndChen{
        {{-1, -std::sqrt(2), -1},
         {0, 0, 0},
         {1, std::sqrt(2), 1}},

        {{-1, 0, 1},
         {-std::sqrt(2), 0, std::sqrt(2)},
         {-1, 0, 1}}};

    const std::vector<Mask<int>> Kirsch{
        {{-3, -3, 5},
         {-3, 0, 5},
         {-3, -3, 5}},

        {{-3, 5, 5},
         {-3, 0, 5},
         {-3, -3, -3}},

        {{5, 5, 5},
         {-3, 0, -3},
         {-3, -3, -3}},

        {{5, 5, -3},
         {5, 0, -3},
         {-3, -3, -3}},

        {{5, -3, -3},
         {5, 0, -3},
         {5, -3, -3}},

        {{-3, -3, -3},
         {5, 0, -3},
         {5, 5, -3}},

        {{-3, -3, -3},
         {-3, 0, -3},
         {5, 5, 5}},

        {{-3, -3, -3},
         {-3, 0, 5},
         {-3, 5, 5}},
    };

    const std::vector<Mask<int>> Robinson{
        {{-1, 0, 1},
         {-2, 0, 2},
         {-1, 0, 1}},

        {{0, 1, 2},
         {-1, 0, 1},
         {-2, -1, 0}},

        {{1, 2, 1},
         {0, 0, 0},
         {-1, -2, -1}},

        {{2, 1, 0},
         {1, 0, -1},
         {0, -1, -2}},

        {{1, 0, -1},
         {2, 0, -2},
         {1, 0, -1}},

        {{0, -1, -2},
         {1, 0, -1},
         {2, 1, 0}},

        {{-1, -2, -1},
         {0, 0, 0},
         {1, 2, 1}},

        {{-2, -1, 0},
         {-1, 0, 1},
         {0, 1, 2}},
    };

    const std::vector<Mask<int>> NevatiaAndBabu{
        {{100, 100, 100, 100, 100},
         {100, 100, 100, 100, 100},
         {0, 0, 0, 0, 0},
         {-100, -100, -100, -100, -100},
         {-100, -100, -100, -100, -100}},

        {{100, 100, 100, 100, 100},
         {100, 100, 100, 78, -32},
         {100, 92, 0, -92, -100},
         {32, -78, -100, -100, -100},
         {-100, -100, -100, -100, -100}},

        {{100, 100, 100, 32, -100},
         {100, 100, 92, -78, -100},
         {100, 100, 0, -100, -100},
         {100, 78, -92, -100, -100},
         {100, -32, -100, -100, -100}},

        {{-100, -100, 0, 100, 100},
         {-100, -100, 0, 100, 100},
         {-100, -100, 0, 100, 100},
         {-100, -100, 0, 100, 100},
         {-100, -100, 0, 100, 100}},

        {{-100, 32, 100, 100, 100},
         {-100, -78, 92, 100, 100},
         {-100, -100, 0, 100, 100},
         {-100, -100, -92, 78, 100},
         {-100, -100, -100, -32, 100}},

        {{100, 100, 100, 100, 100},
         {-32, 78, 100, 100, 100},
         {-100, -92, 0, 92, 100},
         {-100, -100, -100, -78, 32},
         {-100, -100, -100, -100, -100}},
    };
}

#endif